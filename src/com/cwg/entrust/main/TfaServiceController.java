package com.cwg.entrust.main;

import java.sql.ResultSet;
import java.util.Date;

import javax.ws.rs.core.MediaType;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.cwg.entrust.entities.InputString;
import com.cwg.entrust.entities.TokenObject;
import com.cwg.entrust.services.MyConnectionProvider;
import com.cwg.entrust.services.TolenDAO;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;


@RestController
@RequestMapping("/test")
public class TfaServiceController implements TolenDAO {
	java.sql.Connection con = null;
	java.sql.PreparedStatement ps = null;
	Date date = new Date();
    String the_date = date.toString();

	@GetMapping(path = "/getRandom")
	@Override
	public String getRandomAlphaNumericString() throws Exception {
		final String ALPHA_NUMERIC_STRING = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
		int count = 19;
		StringBuilder builder = new StringBuilder();
		while (count-- != 0) {
			int character = (int) (Math.random() * ALPHA_NUMERIC_STRING.length());
			builder.append(ALPHA_NUMERIC_STRING.charAt(character));
		}
//		System.out.println("Succesfully created Token " + builder.toString());

		// create Token
		System.out.println("the_date "+the_date);
		TokenObject myTokenObject = new TokenObject(builder.toString(), the_date);

		// insert token
		int insertStat = insertToken(myTokenObject);
//		System.out.println("Succesfully Inserted " + builder.toString());

		return builder.toString();
	}

	@PostMapping("/validateToken")
	@Override
	public int getIsValidToken(@RequestParam String input,
			@RequestParam String tokenToValidate) throws Exception {
		int result = 0;

		if (input.equalsIgnoreCase(tokenToValidate)) {
			result = 1;
		}

		return result;
	}

	@GetMapping("/hello")
	public String sayHello() {
		return "Hellow World My People";

	}

	@Override
	public int insertToken(TokenObject myToken) {
		String theToken = myToken.getToken();
	

		int status = 0;
		try {
			con = MyConnectionProvider.getConn();
			ps = con.prepareStatement("insert into TOKENS( token, created_date) values( ?, ?)",
					ps.RETURN_GENERATED_KEYS);

			//ps.setTimestamp(1, new java.sql.Timestamp(new java.util.Date().getTime()));
			ps.setString(1, myToken.getToken());
			ps.setString(2, myToken.getCreated_date());

			status = ps.executeUpdate();
			
			ResultSet tableKeys = ps.getGeneratedKeys();
			tableKeys.next();
			int autoGeneratedID = tableKeys.getInt(1);
			System.out.println("autoGeneratedID "+ autoGeneratedID);
			con.close();
		} catch (Exception ex) {
			ex.printStackTrace();

		}

		return status;

	}
}
